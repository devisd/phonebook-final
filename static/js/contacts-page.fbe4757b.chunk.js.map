{"version":3,"file":"static/js/contacts-page.fbe4757b.chunk.js","mappings":"0NAiFA,EA7Ea,WACX,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAG,eAA7BC,EAAI,KAAEC,EAAO,KACpB,GAA4BF,EAAAA,EAAAA,UAAS,IAAG,eAAjCG,EAAM,KAAEC,EAAS,KAElBC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,cAAtBN,EAAI,EAAJA,KAAMO,EAAK,EAALA,MAEd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MAEF,QACE,OAEN,EAQMC,EAAQ,WACZP,EAAQ,IACRE,EAAU,GACZ,EAEA,OACE,0BACE,kBACEM,MAAO,CACLC,OAAQ,OACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,SAAU,GACVC,MAAO,UACPC,QAAS,IAEXC,SAxBe,SAAAb,GACnBA,EAAMc,iBACNtB,GAASuB,EAAAA,EAAAA,IAAW,CAAEpB,KAAAA,EAAME,OAAAA,KAC5BM,GACF,EAoB6B,WAEvB,6BAAO,QAEL,kBACEa,KAAK,OACLrB,KAAK,OACLO,MAAOP,EACPsB,SAAUlB,EACVmB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,6BAAO,UAEL,kBACEJ,KAAK,MACLrB,KAAK,SACLO,MAAOL,EACPoB,SAAUlB,EACVmB,QAAQ,yFACRC,MAAM,gEACNC,UAAQ,QAGZ,mBAAQJ,KAAK,SAAQ,SAAC,oBAI9B,EC7BA,EA9CiB,WACf,IAAMxB,GAAWC,EAAAA,EAAAA,MACX4B,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAK,IACvDC,GAAcJ,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMI,MAAM,KAErDC,EAAAA,EAAAA,YAAU,WACRpC,GAASqC,EAAAA,EAAAA,MACX,GAAG,CAACrC,IAEJ,IAIMsC,EAJkBT,EAAYM,QAAO,SAAAI,GAAE,OAC3CA,EAAGpC,KAAKqC,cAAcC,SAASP,EAAYM,cAAc,IAGzBE,KAAI,YAA2B,IAAxBC,EAAE,EAAFA,GAAIxC,EAAI,EAAJA,KAAME,EAAM,EAANA,OACjD,OACE,2BACE,yBACGF,EAAK,KAAGE,MAEX,mBACEmB,KAAK,SACLoB,QAAS,WACP5C,GAAS6C,EAAAA,EAAAA,IAAcF,GACzB,EAAE,SACH,aATMA,EAcb,IAEA,OACE,0BACE,wBACGd,EAAYiB,QAAU,EACrBR,GAEA,yBACE,uBAAG,sJAMf,E,SCtBA,EAvBe,WACb,IAAMtC,GAAWC,EAAAA,EAAAA,MACXiC,GAAcJ,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMI,MAAM,IAMrD,OACE,0BACE,6BAAO,yBAEL,kBACEX,KAAK,OACLrB,KAAK,SACLO,MAAOwB,EACPT,SAZa,SAAAjB,GACnBR,GAASmC,EAAAA,EAAAA,IAAO3B,EAAMC,cAAcC,OACtC,QAeF,ECOA,EA1BqB,WACnB,OACE,iCACE,wBAAI,mBAEJ,iBACEE,MAAO,CACLC,OAAQ,OACRC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,SAAU,GACVC,MAAO,UACPC,QAAS,IACT,WAEF,SAAC,EAAI,KACL,SAAC,EAAM,KACP,wBAAI,cACJ,SAAC,EAAQ,SAIjB,C","sources":["components/Form/Form.js","components/Contacts/Contacts.js","components/Filter/Filter.js","pages/ContactsView.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\n\nconst Form = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(addContact({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <form\n        style={{\n          height: 'auto',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          fontSize: 20,\n          color: '#010101',\n          padding: 50,\n        }}\n        onSubmit={handleSubmit}\n      >\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces and dashes\"\n            required\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, deleteContact } from 'redux/contacts/contacts-operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contactList = useSelector(state => state.contacts.items);\n  const filterItems = useSelector(state => state.filter);\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const visibleContacts = contactList.filter(el =>\n    el.name.toLowerCase().includes(filterItems.toLowerCase())\n  );\n\n  const component = visibleContacts.map(({ id, name, number }) => {\n    return (\n      <li key={id}>\n        <p>\n          {name}: {number}\n        </p>\n        <button\n          type=\"button\"\n          onClick={() => {\n            dispatch(deleteContact(id));\n          }}\n        >\n          Delete\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <div>\n      <ul>\n        {contactList.length >= 1 ? (\n          component\n        ) : (\n          <li>\n            <p>Нет сохраненных контактов</p>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Contacts;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { filter } from 'redux/store';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterItems = useSelector(state => state.filter);\n\n  const handleChange = event => {\n    dispatch(filter(event.currentTarget.value));\n  };\n\n  return (\n    <div>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filterItems}\n          onChange={handleChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport Form from 'components/Form';\nimport Contacts from 'components/Contacts';\nimport Filter from 'components/Filter';\n\nconst ContactsView = () => {\n  return (\n    <>\n      <h1>Contacts Page</h1>\n\n      <div\n        style={{\n          height: 'auto',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          fontSize: 20,\n          color: '#010101',\n          padding: 50,\n        }}\n      >\n        <Form />\n        <Filter />\n        <h2>Contacts</h2>\n        <Contacts />\n      </div>\n    </>\n  );\n};\n\nexport default ContactsView;\n"],"names":["dispatch","useDispatch","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","reset","style","height","display","flexDirection","justifyContent","alignItems","fontSize","color","padding","onSubmit","preventDefault","addContact","type","onChange","pattern","title","required","contactList","useSelector","state","contacts","items","filterItems","filter","useEffect","getContacts","component","el","toLowerCase","includes","map","id","onClick","deleteContact","length"],"sourceRoot":""}